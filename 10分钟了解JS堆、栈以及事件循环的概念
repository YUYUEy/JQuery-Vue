前言
其实一开始对栈、堆的概念特别模糊，只知道好像跟内存有关，又好像事件循环也沾一点边。面试薄荷的时候，面试官正好也问到了这个问题，当时只能大方的承认不会。
痛定思痛，回去好好的研究一番。
我们将从JS的内存机制以及事件机制和大量的🌰（例子）来了解栈、堆究竟是个什么玩意。概念比较多，不用死读，所有的🌰心里想一遍，浏览器console看一遍就
很清楚了。
let's go
JS内存机制
因为JavaScript具有自动垃圾回收机制，所以对于前端开发来说，内存空间并不是一个经常被提及的概念，很容易被大家忽视。特别是很多不专业的朋友在进入到
前端之后，会对内存空间的认知比较模糊。
在JS中，每一个数据都需要一个内存空间。内存空间又被分为两种，栈内存(stack)与堆内存(heap)。
栈内存一般储存基础数据类型
 Number String Null Undefined Boolean 
 (es6新引入了一种数据类型，Symbol)
复制代码最简单的🌰
var a = 1 
复制代码我们定义一个变量a，系统自动分配存储空间。我们可以直接操作保存在栈内存空间的值，因此基础数据类型都是按值访问。
数据在栈内存中的存储与使用方式类似于数据结构中的堆栈数据结构，遵循后进先出的原则。
堆内存一般储存引用数据类型
堆内存的🌰
var b = { xi : 20 }
复制代码与其他语言不同，JS的引用数据类型，比如数组Array，它们值的大小是不固定的。引用数据类型的值是保存在堆内存中的对象。JavaScript不允许
直接访问堆内存中的位置，因此我们不能直接操作对象的堆内存空间。看一下下面的图，加深理解

作者：薄荷前端
链接：https://juejin.im/post/5b1deac06fb9a01e643e2a95
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
